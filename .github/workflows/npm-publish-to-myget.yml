name: MyGet Publish (NPM)

# Publish the NPM package to the MyGet NPM registry.  
# The artifact (`.tgz`) file is pulled from the artifacts on the workflow run.

permissions:
  contents: read
  id-token: write
  packages: read

on:

  workflow_call:

    inputs:

      artifact_name:
        description: The GitHub artifact name which contains the '*.tgz' file produced earlier.  The assumption is that the file is ready for publishing.
        required: true
        type: string

      project_directory:
        description: Location of the package.json or package .tgz file.
        required: false
        type: string
        default: ./

    secrets:

      myget_api_key:
        description: Please pass in the 'secrets.MYGET_DEPLOY_API_KEY_SECRET' value.
        required: true

jobs:

  publish:
    name: MyGet Publish (NPM)
    runs-on: ubuntu-latest
    defaults:
      run:
          working-directory: ${{ inputs.project_directory }}
    env:
      ARTIFACTNAME: ${{ inputs.artifact_name }}
      PROJECTDIRECTORY: ${{ inputs.project_directory }}

    steps:

      - name: Validate inputs.artifact_name
        uses: ritterim/public-github-actions/actions/file-name-validator@v1.2.0
        env:
          ARTIFACTNAME: ${{ inputs.artifact_name }}
        with:
          file_name: ${{ env.ARTIFACTNAME }}

      - name: Validate inputs.project_directory
        uses: ritterim/public-github-actions/actions/path-name-validator@v1.2.0
        with:
          path_name: ${{ env.PROJECTDIRECTORY }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}

      - name: npm-config-myget-packages-repository
        uses: ritterim/public-github-actions/actions/npm-config-myget-packages-repository@v1.2.0
        with:
          myget_api_key: ${{ secrets.myget_api_key }}

      - run: ls -la

      - name: Publish NPM Package File to MyGet
        run: npm publish "${ARTIFACTNAME}.tgz"
