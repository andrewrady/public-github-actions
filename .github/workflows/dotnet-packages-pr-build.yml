name: Package PR Build (.NET)

permissions:
  contents: read
  id-token: write
  packages: read

on:

  workflow_call:

    inputs:

      docker_mssql_image:
        description: Supply an image/tag string if you need to startup the SQL for Docker service for tests.  Leave this input blank if you do not need the service.
        type: string
        required: false
        default: ''

      docker_mssql_port:
        description: The port on which the SQL for Docker container will listen.
        required: false
        default: 11435
        type: number

      dotnet_version:
        required: false
        type: string
        default: "6.0"

      github_run_id_baseline:
        description: The zero point for calculating the patch value from the 'github.run_id' value.
        required: true
        type: string # has to be string, because the caller is often passing in a GitHub Actions variable.

      jfrog_api_base_url:
        description: 'JFrog platform url (for example: https://rimdev.jfrog.io/)'
        required: false
        default: 'https://rimdev.jfrog.io/'
        type: string

      jfrog_xray_watch_list:
        description: Comma-delimited list (with no spaces) of XRay watches to enforce.  Passed to "jf audit" via the "--watches" argument.
        required: true
        type: string

      project_name:
        required: true
        type: string

      project_directory:
        required: false
        type: string
        default: "./"

    secrets:

      jfrog_api_key:
        description: The secret API key needed in order to access the JFrog XRay API.
        required: true

jobs:

  version:
    uses: ritterim/public-github-actions/.github/workflows/calculate-version-from-txt-using-github-run-id.yml@v1.11.0
    #uses: ./.github/workflows/calculate-version-from-txt-using-github-run-id.yml
    with:
      github_run_id_baseline: ${{ inputs.github_run_id_baseline }}
      version_suffix: "-pr${{ github.event.number }}"

  build:
    uses: ritterim/public-github-actions/.github/workflows/dotnet-build.yml@v1.11.0
    #uses: ./.github/workflows/dotnet-build.yml
    with:
      dotnet_version: ${{ inputs.dotnet_version }}
      project_directory: ${{ inputs.project_directory }}

  dotnet-test:
    needs: [ build, version ]
    uses: ritterim/public-github-actions/.github/workflows/dotnet-test.yml@v1.11.0
    #uses: ./.github/workflows/dotnet-test.yml
    with:
      artifact_name: ${{ github.event.repository.name }}-testResults-${{ needs.version.outputs.informational_version }}
      configuration: ${{ needs.build.outputs.configuration }}
      dotnet_version: ${{ needs.build.outputs.dotnet_version }}
      persisted_workspace_artifact_name: ${{ needs.build.outputs.persisted_workspace_artifact_name }}
      project_directory: ${{ needs.build.outputs.project_directory }}
      docker_mssql_image: ${{ inputs.docker_mssql_image }}
      docker_mssql_port: ${{ inputs.docker_mssql_port }}

  jfrog-xray-audit:
    needs: [ build, version ]
    uses: ritterim/public-github-actions/.github/workflows/jfrog-xray-audit.yml@v1.11.0
    #uses: ./.github/workflows/jfrog-xray-audit.yml
    secrets:
      jfrog_api_key: ${{ secrets.jfrog_api_key }}
    with:
      jfrog_api_base_url: ${{ inputs.jfrog_api_base_url }}
      jfrog_xray_watch_list: ${{ inputs.jfrog_xray_watch_list }}
      persisted_workspace_artifact_name: ${{ needs.build.outputs.persisted_workspace_artifact_name }}
      report_artifact_name: ${{ github.event.repository.name }}-xray-audit-${{ needs.version.outputs.informational_version }}

  dotnet-pack:
    needs: [ build, dotnet-test, jfrog-xray-audit, version ]
    uses: ritterim/public-github-actions/.github/workflows/dotnet-pack.yml@v1.11.0
    #uses: ./.github/workflows/dotnet-pack.yml
    with:
      artifact_name: ${{ github.event.repository.name }}-packages-${{ needs.version.outputs.informational_version }}
      configuration: ${{ needs.build.outputs.configuration }}
      dotnet_version: ${{ needs.build.outputs.dotnet_version }}
      persisted_workspace_artifact_name: ${{ needs.build.outputs.persisted_workspace_artifact_name }}
      project_directory: ${{ needs.build.outputs.project_directory }}
      informational_version: ${{ needs.version.outputs.informational_version }}
      version: ${{ needs.version.outputs.version }}

